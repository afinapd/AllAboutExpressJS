{
    "swagger" : "2.0",
    "info" : {
      "description" : "This is a EnigmaStore server",
      "version" : "1.0.0",
      "title" : "Swagger EnigmaStore"
    },
    "tags" : [ {
      "name" : "product",
      "description" : "Everything about your Product"
    }],
    "schemes" : [ "http", "https" ],
    "paths" : {
      "/product" : {
        "get" : {
          "tags" : [ "product" ],
          "summary" : "Returns product data",
          "operationId" : "getProduct",
          "produces" : [ "application/json" ],
          "parameters" : [ ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ApiResponse"
              }
            },
            "400" : {
              "description" : "Invalid ID supplied"
            },
            "404" : {
              "description" : "Product not found"
            }
          },
          "security" : [ {
            "api_key" : [ ]
          } ]
        },
        "post" : {
          "tags" : [ "product" ],
          "summary" : "Add a new product to the store",
          "description" : "",
          "operationId" : "addProduct",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "Product object that needs to be added to the store",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/ProductPost"
            }
          } ],
          "responses" : {
            "405" : {
              "description" : "Invalid input"
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:pets", "read:pets" ]
          } ]
        },
        "put" : {
          "tags" : [ "product" ],
          "summary" : "Update an existing product",
          "description" : "",
          "operationId" : "updateProduct",
          "consumes" : [ "application/json"],
          "produces" : ["application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "Product object that needs to be added to the store",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          } ],
          "responses" : {
            "400" : {
              "description" : "Invalid ID supplied"
            },
            "404" : {
              "description" : "Product not found"
            },
            "405" : {
              "description" : "Validation exception"
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:products", "read:products" ]
          } ]
        }
      },
      "/product/{id}" : {
        "delete" : {
          "tags" : [ "product" ],
          "summary" : "Deletes a product",
          "description" : "",
          "operationId" : "deleteProduct",
          "produces" : [ "application/json" ],
          "parameters" : [{
            "name" : "productId",
            "in" : "path",
            "description" : "Product id to delete",
            "required" : true,
            "type" : "integer"
          } ],
          "responses" : {
            "400" : {
              "description" : "Invalid ID supplied"
            },
            "404" : {
              "description" : "Product not found"
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:products", "read:products" ]
          } ]
        }
      }
    },
    "securityDefinitions" : {
      "petstore_auth" : {
        "type" : "oauth2",
        "flow" : "implicit",
        "scopes" : {
          "write:pets" : "modify products in your account",
          "read:pets" : "read your products"
        }
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    },
    "definitions" : {
      "Product" : {
        "type" : "object",
        "required" : [ "name", "photoUrls" ],
        "properties" : {
          "id" : {
            "type":"integer",
            "example": "1192f8d0-583f-11ea-b0df-93a95c4a284a"
          },
          "productCode" : {
            "type" : "integer",
            "example" : "XYZ"
          },
          "productName" : {
            "type" : "string",
            "example" : "Zink"
          },
          "categoryId" :{
            "type" : "string",
            "example" : "4b7cb3d0-53d3-11ea-aed9-b7c4cf6321ed"
          }
        },
        "xml" : {
          "name" : "Product"
        }
      },
      "ProductPost" : {
        "type" : "object",
        "required" : [ "name", "photoUrls" ],
        "properties" : {
          "productCode" : {
            "type" : "integer",
            "example" : "HIJ"
          },
          "productName" : {
            "type" : "string",
            "example" : "shampoo"
          },
          "categoryId" :{
            "type" : "string",
            "example" : "4b7cb3d0-53d3-11ea-aed9-b7c4cf6321ed"
          }
        },
        "xml" : {
          "name" : "Product"
        }
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Tag"
        }
      },
      "ApiResponse" : {
        "type" : "object",
        "properties" :{
          "id" : {
            "type" : "integer"
          },
          "productCode" :{
            "type" : "string"
          },
          "productName" : {
            "type": "string"
          },
          "categoryId" : {
            "type" : "string"
          },
          "category" :{
            "type" : "object",
            "properties" : {
              "id": {
                "type":"string"
              },
              "categoryName" : {
                "type" : "string"
              }
            }
         
          }
        }
      }
    }
  }